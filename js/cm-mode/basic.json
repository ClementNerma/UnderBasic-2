[{},{"axe:id":">Tok","id":">DMS","syntax":"<value>‚ñ∂DMS","description":"Displays <value> in DMS format.","keys":"(2nd) [ANGLE] ANGLE 4:‚ñ∂DMS"},{"id":">Dec","syntax":"<value>‚ñ∂Dec","description":"Displays a real or complex number, expression, list, or matrix in decimal format.","keys":"(MATH) MATH 2:‚ñ∂Dec"},{"axe:id":">Char","id":">Frac","syntax":"<value>‚ñ∂Frac","description":"Displays a real or complex number, expression, list, or matrix as a fraction simplified to its simplest terms.","keys":"(MATH) MATH 1:‚ñ∂Frac"},{"id":"->","syntax":"<value>‚Üí<variable>","description":"Stores <value> into <variable>, which should be of a type compatible with <value>.","keys":"(STO‚Üí)"},{"id":"Boxplot","syntax":"Plot<plotnumber>(Boxplot,<xlistname>{,<freqlist>})","description":"Defines plot 1, 2, or 3 as a box-and-whisker plot for <xlistname> and optional <freqlist>.","keys":"(2nd) [STAT PLOT] TYPE 5:Boxplot"},{"id":"[","syntax":"[<data>]","description":"Used to define matrices, [ and ] are used to surround the data in a row as well as all the rows in a matrix. For example, [[0,1][2,3][4,5]] is a matrix of three rows and two columns.","keys":"(2nd) [[]"},{"id":"]","syntax":"[<data>]","description":"Used to define matrices, [ and ] are used to surround the data in a row as well as all the rows in a matrix. For example, [[0,1][2,3][4,5]] is a matrix of three rows and two columns. At the end of a line or right before ‚Üí, the right parenthesis can be omitted.","keys":"(2nd) []]"},{"id":"{","syntax":"{<data>}","description":"Used to define lists, { and } surround the numbers in the list, separated by commas. For example, {0,1,2} is a three-element list.","keys":"(2nd) [{]"},{"id":"}","syntax":"{<data>}","description":"Used to define lists, { and } surround the numbers in the list, separated by commas. For example, {0,1,2} is a three-element list. At the end of a line or right before ‚Üí, the right parenthesis can be omitted.","keys":"(2nd) [}]"},{"id":"^^r","syntax":"<angle> ≥","description":"Interprets <angle> as radians.","keys":"(2nd) [ANGLE] ANGLE 2: ≥"},{"id":"^^o","syntax":"<degrees>¬∞{<minutes>'{<seconds>\"}}","description":"Interprets <degrees> as degrees; designates degrees in DMS format.","keys":"(2nd) [ANGLE] ANGLE 1:¬∞"},{"id":"^^-1","syntax":"<value>‚Åª¬π","description":"Returns 1 divided by a real or complex number, expression, or elements of a list, or a matrix inverted.","keys":"(x‚Åª¬π)"},{"id":"^^2","syntax":"<value>¬≤","description":"Returns <value> multiplied by itself, or elements of list <value> squared. <value> can be a real or complex number, expression, list, or matrix.","keys":"(x¬≤)"},{"id":"^^T","syntax":"<matrix>·µÄ","description":"Returns a matrix in which each element (row,column) is swapped with the corresponding element (column,row) of matrix <matrix>.","keys":"(2nd) [MATRIX] MATH 2:·µÄ"},{"id":"^^3","syntax":"<value>¬≥","description":"Returns the cube of a real or complex number, expression, list, or square matrix.","keys":"(MATH) MATH 3:¬≥"},{"id":"(","syntax":"(<exp>)","description":"Everything inside parentheses take precedence when the line is evaluated.","keys":"(2nd) [(]"},{"id":")","syntax":"{<command>}(<data>)","description":"The right parenthesis closes either a parenthetical expression or any command containing a left parenthesis. At the end of a line or right before ‚Üí, the right parenthesis can be omitted.","keys":"(2nd) [)]"},{"id":"round(","syntax":"round(<value>,<number>)","description":"Returns a number, expression, list, or matrix rounded to <number> decimal places (less than or equal to nine).","keys":"(MATH) NUM 2:round("},{"id":"pxl-Test(","syntax":"pxl-Test(<row>,<column>)","description":"Returns 1 if the pixel at row <row> and column <column> is on, 0 if it is off; <row> is between 0 and 62 and <column> is between 0 and 94.","keys":"(2nd) [DRAW] POINTS 7:pxl-Test("},{"id":"augment(","syntax":"augment(<valueA>,<valueB>)","description":"Returns a matrix, which is matrix <valueB> appended to matrix <valueA> as new columns, or a list, which is list <valueB> concatenated to the end of list <valueA>.","keys":"(2nd) [MATRX] MATH 7:augment("},{"id":"rowSwap(","syntax":"rowSwap(<matrix>,<rowA>,<rowB>)","description":"Returns a matrix with row <rowA> of <matrix> swapped with row <rowB>.","keys":"(2nd) [MATRX] MATH C:rowSwap("},{"id":"row+(","syntax":"row+(<matrix>,<rowA>,<rowB>)","description":"Returns a matrix with row <rowA> of <matrix> added to row <rowB> and stored in <rowB>.","keys":"(2nd) [MATRX] MATH D:row+("},{"id":"*row(","syntax":"*row(<value>,<matrix>,<row>)","description":"Returns a matrix with row <row> of <matrix> multiplied by <value> and stored in row <row>.","keys":"(2nd) [MATRX] MATH E:*row("},{"id":"*row+(","syntax":"*row+(<value>,<matrix>,<rowA>,<rowB>)","description":"Returns a matrix with row <rowA> of <matrix> multiplied by <value>, added to <rowB>, and stored in <rowB>.","keys":"(2nd) [MATRX] MATH F:*row+("},{"id":"max(","syntax":"max(<valueA>{,<valueB>})","description":"Returns the larger of <valueA> and <valueB>, a list containing the larger of each pair of elements in real or complex lists <valueA> and <valueB>, or the largest real or complex argument in <valueA> if <valueB> is not given.","keys":"(MATH) NUM 7:max("},{"id":"min(","syntax":"min(<valueA>{,<valueB>})","description":"Returns the smaller of <valueA> and <valueB>, a list containing the smaller of each pair of elements in real or complex lists <valueA> and <valueB>, or the smallest real or complex argument in <valueA> if <valueB> is not given.","keys":"(MATH) NUM 6:min("},{"id":"R>Pr(","syntax":"R‚ñ∂Pr(<x>,<y>)","description":"Returns the r-value, given rectangular coordinates <x> and <y> or a list of rectangular coordinates.","keys":"(2nd) [ANGLE] ANGLE 5:R‚ñ∂Pr("},{"id":"R>Ptheta(","syntax":"R‚ñ∂PŒ∏(<number1>,<number2>)","description":"Returns the Œ∏-value, given rectangular coordinates <x> and <y> or a list of rectangular coordinates.","keys":"(2nd) [ANGLE] ANGLE 6:R‚ñ∂PŒ∏("},{"id":"P>Rx(","syntax":"P‚ñ∂Rx(<r>,<angle>)","description":"Returns the x-value, given polar coordinates <r> and <angle> or a list of polar coordinates.","keys":"(2nd) [ANGLE] ANGLE 7:P‚ñ∂Rx("},{"id":"P>Ry(","syntax":"P‚ñ∂Ry(<r>,<angle>)","description":"Returns the y-value, given polar coordinates <r> and <angle> or a list of polar coordinates.","keys":"(2nd) [ANGLE] ANGLE 8:P‚ñ∂Ry("},{"id":"median(","syntax":"median(<list>{,<freqlist>})","description":"Returns the median of <list> with frequency <freqlist>.","keys":"(2nd) [LIST] MATH 4:median("},{"id":"randM(","syntax":"randM(<rows>,<columns>)","description":"Returns a random matrix of <rows> rows and <columns> columns.","keys":"(2nd) [MATRX] MATH 6:randM("},{"id":"mean(","syntax":"mean(<list>{,<freqlist>})","description":"Returns the mean of <list> with frequency <freqlist>.","keys":"(2nd) [LIST] MATH 3:mean("},{"id":"solve(","syntax":"solve(<expression>,<variable>,<guess>{,<bounds>})","description":"Solves <expression> for <variable>, given an initial guess <guess> and lower and upper bounds in two-element list <bounds> within which the solution is sought.","keys":"(MATH) 0:solve("},{"id":"seq(","syntax":"seq(<expression>,<variable>,<begin>,<end>{,<increment>})","description":"Returns list created by evaluating <expression> with regard to <variable>, from <begin> to <end> by <increment> (defaulting to 1).","keys":"(2nd) [LIST] OPS 5:seq("},{"id":"fnInt(","syntax":"fnInt(<expression>,<variable>,<lower>,<upper>{,<tolerance>})","description":"Returns the function integral of <expression> with respect to <variable>, between <lower> and <upper>, with specified <tolerance> (defaulting to 0.00001).","keys":"(MATH) MATH 9:fnInt("},{"id":"nDeriv(","syntax":"nDeriv(<expression>,<variable>,<value>{,<h>})","description":"Returns approximate numerical derivative of <expression> with respect to <variable> at <value>, with specified step size <h> (defaulting to 0.001).","keys":"(MATH) MATH 8:nDeriv("},{},{"id":"fMin(","syntax":"fMax(<expression>,<variable>,<lower>,<upper>{,<tolerance>})","description":"Returns the value of <variable> where the local minimum of <expression> occurs, between <lower> and <upper>, with specified <tolerance> (defaulting to 0.00001).","keys":"(MATH) MATH 6:fMin("},{"id":"fMax(","syntax":"fMax(<expression>,<variable>,<lower>,<upper>{,<tolerance>})","description":"Returns the value of <variable> where the local maximum of <expression> occurs, between <lower> and <upper>, with specified <tolerance> (defaulting to 0.00001).","keys":"(MATH) MATH 7:fMax("},{"id":" ","syntax":"","description":"","keys":"(ALPHA) [ ]"},{"id":"&quot;","syntax":"<degrees>¬∞<minutes>'<seconds>\" OR \"<text>\"","description":"Interprets <seconds> angle measurement as seconds or <text> as a string.","keys":"(ALPHA) [\"]"},{"id":",","syntax":",","description":"A comma separates arguments in a variety of situations.","keys":"(,)"},{"id":"[i]","syntax":"ùëñ","description":"This is the imaginary number (square root of negative one). It also marks the current expression as complex, regardless of the current mode setting.","keys":"(2nd) [ùëñ]"},{"id":"!","syntax":"<value>!","description":"Returns factorial of <value>.","keys":"(MATH) PRB 4:!"},{"id":"CubicReg ","syntax":"CubicReg {<regequ>} OR CubicReg <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a cubic regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 6:CubicReg"},{"id":"QuartReg ","syntax":"QuartReg {<regequ>} OR QuartReg <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a quartic regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 7:QuartReg"},{"id":"0","syntax":"","description":"","keys":"(0)"},{"id":"1","syntax":"","description":"","keys":"(1)"},{"id":"2","syntax":"","description":"","keys":"(2)"},{"id":"3","syntax":"","description":"","keys":"(3)"},{"id":"4","syntax":"","description":"","keys":"(4)"},{"id":"5","syntax":"","description":"","keys":"(5)"},{"id":"6","syntax":"","description":"","keys":"(6)"},{"id":"7","syntax":"","description":"","keys":"(7)"},{"id":"8","syntax":"8","description":"The number 8.","keys":"(8)"},{"id":"9","syntax":"","description":"","keys":"(9)"},{"id":".","syntax":".","description":"Decimal point. It can be placed within or at either end of a sequence of digits.","keys":"(.)"},{"id":"|E","syntax":"[<value>]·¥á<exponent>","description":"Returns <value> times 10 to the <exponent>. <value> can be a number, list, or matrix.","keys":"(2nd) [EE]"},{"id":" or ","syntax":"<valueA> or <valueB>","description":"Returns 1 if <valueA> or <valueB> is not zero and 0 otherwise. <valueA> and <valueB> can be real numbers, expressions, or lists.","keys":"(2nd) [TEST] LOGIC 2:or"},{"id":" xor ","syntax":"<valueA> xor <valueB>","description":"Returns 1 if exactly one of <valueA> and <valueB> is not zero and 0 otherwise. <valueA> and <valueB> can be real numbers, expressions, or lists.","keys":"(2nd) [TEST] LOGIC 3:xor"},{"id":":","syntax":"<exp>:<exp>","description":"Alternative to newline (often used to separate expressions on the home screen).","keys":"(ALPHA) [:]"},{"id":"&#10;","syntax":"","description":"","keys":"(ENTER)"},{"id":" and ","syntax":"<valueA> and <valueB>","description":"Returns 1 if both <valueA> and <valueB> are not ¬Ézero and 0 otherwise. <valueA> and <valueB> can be real numbers, expressions, or lists.","keys":"(2nd) [TEST] LOGIC 1:and"},{"id":"A","syntax":"","description":"","keys":"(ALPHA) [A]"},{"id":"B","syntax":"","description":"","keys":"(ALPHA) [B]"},{"id":"C","syntax":"","description":"","keys":"(ALPHA) [C]"},{"id":"D","syntax":"","description":"","keys":"(ALPHA) [D]"},{"id":"E","syntax":"","description":"","keys":"(ALPHA) [E]"},{"id":"F","syntax":"","description":"","keys":"(ALPHA) [F]"},{"id":"G","syntax":"","description":"","keys":"(ALPHA) [G]"},{"id":"H","syntax":"","description":"","keys":"(ALPHA) [H]"},{"id":"I","syntax":"","description":"","keys":"(ALPHA) [I]"},{"id":"J","syntax":"","description":"","keys":"(ALPHA) [J]"},{"id":"K","syntax":"","description":"","keys":"(ALPHA) [K]"},{"id":"L","syntax":"","description":"","keys":"(ALPHA) [L]"},{"id":"M","syntax":"","description":"","keys":"(ALPHA) [M]"},{"id":"N","syntax":"","description":"","keys":"(ALPHA) [N]"},{"id":"O","syntax":"","description":"","keys":"(ALPHA) [O]"},{"id":"P","syntax":"","description":"","keys":"(ALPHA) [P]"},{"id":"Q","syntax":"","description":"","keys":"(ALPHA) [Q]"},{"id":"R","syntax":"","description":"","keys":"(ALPHA) [R]"},{"id":"S","syntax":"","description":"","keys":"(ALPHA) [S]"},{"id":"T","syntax":"","description":"","keys":"(ALPHA) [T]"},{"id":"U","syntax":"","description":"","keys":"(ALPHA) [U]"},{"id":"V","syntax":"","description":"","keys":"(ALPHA) [V]"},{"id":"W","syntax":"","description":"","keys":"(ALPHA) [W]"},{"id":"X","syntax":"","description":"","keys":"(ALPHA) [X]"},{"id":"Y","syntax":"","description":"","keys":"(ALPHA) [Y]"},{"id":"Z","syntax":"","description":"","keys":"(ALPHA) [Z]"},{"id":"theta","syntax":"","description":"","keys":"(ALPHA) [Œ∏]"},[{"id":"[A]","syntax":"<Matrix>‚Üí[A]","description":"Matrix A.","keys":"(2nd) [MATRX] 1:[A]"},{"id":"[B]","syntax":"","description":"","keys":"(2nd) [MATRX] 2:[B]"},{"id":"[C]","syntax":"","description":"","keys":"(2nd) [MATRX] 3:[C]"},{"id":"[D]","syntax":"","description":"","keys":"(2nd) [MATRX] 4:[D]"},{"id":"[E]","syntax":"","description":"","keys":"(2nd) [MATRX] 5:[E]"},{"id":"[F]","syntax":"","description":"","keys":"(2nd) [MATRX] 6:[F]"},{"id":"[G]","syntax":"","description":"","keys":"(2nd) [MATRX] 7:[G]"},{"id":"[H]","syntax":"","description":"","keys":"(2nd) [MATRX] 8:[H]"},{"id":"[I]","syntax":"","description":"","keys":"(2nd) [MATRX] 9:[I]"},{"id":"[J]","syntax":"","description":"","keys":"(2nd) [MATRX] 0:[J]"}],[{"id":"L1","syntax":"<List>‚ÜíL‚ÇÅ","description":"List number 1.","keys":"(2nd) [L‚ÇÅ]"},{"id":"L2","syntax":"<List>‚ÜíL‚ÇÇ","description":"List number 2.","keys":"(2nd) [L‚ÇÇ]"},{"id":"L3","syntax":"<List>‚ÜíL‚ÇÉ","description":"List number 3.","keys":"(2nd) [L‚ÇÉ]"},{"id":"L4","syntax":"<List>‚ÜíL‚ÇÑ","description":"List number 4.","keys":"(2nd) [L‚ÇÑ]"},{"id":"L5","syntax":"<List>‚ÜíL‚ÇÖ","description":"List number 5.","keys":"(2nd) [L‚ÇÖ]"},{"id":"L6","syntax":"<List>‚ÜíL‚ÇÜ","description":"List number 6.","keys":"(2nd) [L‚ÇÜ]"}],[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"id":"Y1","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 1:Y‚ÇÅ"},{"id":"Y2","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 2:Y‚ÇÇ"},{"id":"Y3","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 3:Y‚ÇÉ"},{"id":"Y4","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 4:Y‚ÇÑ"},{"id":"Y5","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 5:Y‚ÇÖ"},{"id":"Y6","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 6:Y‚ÇÜ"},{"id":"Y7","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 7:Y‚Çá"},{"id":"Y8","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 8:Y‚Çà"},{"id":"Y9","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 9:Y‚Çâ"},{"id":"Y0","syntax":"","description":"","keys":"(VARS) Y-VARS 1:Function 0:Y‚ÇÄ"},{},{},{},{},{},{},{"id":"X1T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 1:X‚ÇÅ·¥õ"},{"id":"Y1T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 2:Y‚ÇÅ·¥õ"},{"id":"X2T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 3:X‚ÇÇ·¥õ"},{"id":"Y2T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 4:Y‚ÇÇ·¥õ"},{"id":"X3T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 5:X‚ÇÉ·¥õ"},{"id":"Y3T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 6:Y‚ÇÉ·¥õ"},{"id":"X4T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 7:X‚ÇÑ·¥õ"},{"id":"Y4T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 8:Y‚ÇÑ·¥õ"},{"id":"X5T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 9:X‚ÇÖ·¥õ"},{"id":"Y5T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric 0:Y‚ÇÖ·¥õ"},{"id":"X6T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric A:X‚ÇÜ·¥õ"},{"id":"Y6T","syntax":"","description":"","keys":"(VARS) Y-VARS 2:Parametric B:Y‚ÇÜ·¥õ"},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"id":"r1","syntax":"","description":"","keys":"(VARS) Y-VARS 3:Polar 1:r‚ÇÅ"},{"id":"r2","syntax":"","description":"","keys":"(VARS) Y-VARS 3:Polar 2:r‚ÇÇ"},{"id":"r3","syntax":"","description":"","keys":"(VARS) Y-VARS 3:Polar 3:r‚ÇÉ"},{"id":"r4","syntax":"","description":"","keys":"(VARS) Y-VARS 3:Polar 4:r‚ÇÑ"},{"id":"r5","syntax":"","description":"","keys":"(VARS) Y-VARS 3:Polar 5:r‚ÇÖ"},{"id":"r6","syntax":"","description":"","keys":"(VARS) Y-VARS 3:Polar 6:r‚ÇÜ"},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{"id":"|u","syntax":"d","description":"","keys":"(2nd) [u]"},{"id":"|v","syntax":"","description":"","keys":"(2nd) [v]"},{"id":"|w","syntax":"","description":"","keys":"(2nd) [w]"}],{"id":"prgm","syntax":"prgm<name>","description":"Executes the program <name>.","keys":"(PRGM) CTL D:prgm"},[{"id":"Pic1","syntax":"","description":"One of the pictures a TI-Calculator can hold","keys":"(VARS) VARS 4:Picture 1:Pic1"},{"id":"Pic2","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 2:Pic2"},{"id":"Pic3","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 3:Pic3"},{"id":"Pic4","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 4:Pic4"},{"id":"Pic5","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 5:Pic5"},{"id":"Pic6","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 6:Pic6"},{"id":"Pic7","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 7:Pic7"},{"id":"Pic8","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 8:Pic8"},{"id":"Pic9","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 9:Pic9"},{"id":"Pic0","syntax":"","description":"","keys":"(VARS) VARS 4:Picture 0:Pic0"}],[{"id":"GDB1","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 1:GDB1"},{"id":"GDB2","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 2:GDB2"},{"id":"GDB3","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 3:GDB3"},{"id":"GDB4","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 4:GDB4"},{"id":"GDB5","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 5:GDB5"},{"id":"GDB6","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 6:GDB6"},{"id":"GDB7","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 7:GDB7"},{"id":"GDB8","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 8:GDB8"},{"id":"GDB9","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 9:GDB9"},{"id":"GDB0","syntax":"","description":"","keys":"(VARS) VARS 3:GDB 0:GDB0"}],[{},{"id":"RegEq","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics EQ 1:RegEQ"},{"id":"[n]","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics XY 1:n"},{"id":"[xhat]","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics XY 2:·∫ã"},{"id":"[Sigmax]","syntax":"Œ£x","description":"Sum of x-values. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) VARS 5:Statistics Œ£ 2:Œ£x"},{"id":"[Sigmax^2]","syntax":"Œ£x¬≤","description":"Sum of x-squared values. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) VARS 5:Statistics Œ£ 2:Œ£x¬≤"},{"id":"[Sx]","syntax":"Sx","description":"Sample standard deviation of x-values. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) VARS 5:Statistics XY 3:Sx"},{"id":"[sigmax]","syntax":"œÉx","description":"Population standard deviation of x-values. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) VARS 5:Statistics XY 4:œÉx"},{"id":"[minX]","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics XY 8:minX"},{"id":"[maxX]","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics XY 9:maxX"},{"id":"[minY]","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics XY 0:minY"},{"id":"[maxY]","syntax":"","description":"","keys":"(VARS) VARS 5:Statistics XY A:maxY"},{"id":"[yhat]","syntax":"","description":"","keys":""},{"id":"[Sigmay]","syntax":"","description":"","keys":""},{"id":"[Sigmay^2]","syntax":"","description":"","keys":""},{"id":"[Sy]","syntax":"","description":"","keys":""},{"id":"[sigmay]","syntax":"","description":"","keys":""},{"id":"[Sigmaxy]","syntax":"","description":"","keys":""},{"id":"[r]","syntax":"r","description":"Correlation coefficient. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 7:r"},{"id":"[Med]","syntax":"","description":"","keys":""},{"id":"[Q1]","syntax":"","description":"","keys":""},{"id":"[Q3]","syntax":"","description":"","keys":""},{"id":"[a]","syntax":"a","description":"Regression coefficient. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 2:a"},{"id":"[b]","syntax":"b","description":"Regression coefficient. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 3:b"},{"id":"[c]","syntax":"c","description":"Regression coefficient. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 4:c"},{"id":"[d]","syntax":"d","description":"Regression coefficient. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 5:d"},{"id":"[e]","syntax":"e","description":"Regression coefficient. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 6:e"},{"id":"[x1]","syntax":"","description":"","keys":""},{"id":"[x2]","syntax":"","description":"","keys":""},{"id":"[x3]","syntax":"","description":"","keys":""},{"id":"[y1]","syntax":"","description":"","keys":""},{"id":"[y2]","syntax":"","description":"","keys":""},{"id":"[y3]","syntax":"","description":"","keys":""},{"id":"[recursiven]","syntax":"","description":"","keys":""},{"id":"[p]","syntax":"","description":"","keys":""},{"id":"[z]","syntax":"","description":"","keys":""},{"id":"[t]","syntax":"","description":"","keys":""},{"id":"[chi^2]","syntax":"","description":"","keys":""},{"id":"[F]","syntax":"","description":"","keys":""},{"id":"[df]","syntax":"","description":"","keys":""},{"id":"[phat]","syntax":"","description":"","keys":""},{"id":"[phat1]","syntax":"","description":"","keys":""},{"id":"[phat2]","syntax":"","description":"","keys":""},{"id":"[xhat1]","syntax":"","description":"","keys":""},{"id":"[Sx1]","syntax":"","description":"","keys":""},{"id":"[n1]","syntax":"","description":"","keys":""},{"id":"[xhat2]","syntax":"","description":"","keys":""},{"id":"[Sx2]","syntax":"","description":"","keys":""},{"id":"[n2]","syntax":"","description":"","keys":""},{"id":"[Sxp]","syntax":"","description":"","keys":""},{"id":"[lower]","syntax":"","description":"","keys":""},{"id":"[upper]","syntax":"","description":"","keys":""},{"id":"[s]","syntax":"","description":"","keys":""},{"id":"[r^2]","syntax":"r¬≤","description":"Coefficient of determination for statistics commands except QuadReg, CubicReg, and QuartReg. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics E) 5:Statistics EQ 8:r¬≤"},{"id":"[R^2]","syntax":"R¬≤","description":"Coefficient of determination for QuadReg, CubicReg, and QuartReg. This variable is updated by statistics commands and cannot be stored to directly.","keys":"(VARS) 5:Statistics EQ 9:R¬≤"},{"id":"[factordf]","syntax":"","description":"","keys":""},{"id":"[factorSS]","syntax":"","description":"","keys":""},{"id":"[factorMS]","syntax":"","description":"","keys":""},{"id":"[errordf]","syntax":"","description":"","keys":""},{"id":"[errorSS]","syntax":"","description":"","keys":""},{"id":"[errorMS]","syntax":"","description":"","keys":""}],[{"id":"ZXscl","syntax":"","description":"","keys":""},{"id":"ZYscl","syntax":"","description":"","keys":""},{"id":"Xscl","syntax":"","description":"","keys":""},{"id":"Yscl","syntax":"","description":"","keys":""},{"id":"u(nMin)","syntax":"","description":"","keys":""},{"id":"v(nMin)","syntax":"","description":"","keys":""},{"id":"u(n-1)","syntax":"","description":"","keys":""},{"id":"v(n-1)","syntax":"","description":"","keys":""},{"id":"Zu(nMin)","syntax":"","description":"","keys":""},{"id":"Zv(nMin)","syntax":"","description":"","keys":""},{"id":"Xmin","syntax":"","description":"","keys":""},{"id":"Xmax","syntax":"","description":"","keys":""},{"id":"Ymin","syntax":"","description":"","keys":""},{"id":"Ymax","syntax":"","description":"","keys":""},{"id":"Tmin","syntax":"","description":"","keys":""},{"id":"Tmax","syntax":"","description":"","keys":""},{"id":"thetamin","syntax":"","description":"","keys":""},{"id":"thetamax","syntax":"","description":"","keys":""},{"id":"ZXmin","syntax":"","description":"","keys":""},{"id":"ZXmax","syntax":"","description":"","keys":""},{"id":"ZYmin","syntax":"","description":"","keys":""},{"id":"ZYmax","syntax":"","description":"","keys":""},{"id":"Zthetamin","syntax":"","description":"","keys":""},{"id":"Zthetamax","syntax":"","description":"","keys":""},{"id":"ZTmin","syntax":"","description":"","keys":""},{"id":"ZTmax","syntax":"","description":"","keys":""},{"id":"TblStart","syntax":"","description":"","keys":""},{"id":"PlotStart","syntax":"","description":"","keys":""},{"id":"ZPlotStart","syntax":"","description":"","keys":""},{"id":"nMax","syntax":"","description":"","keys":""},{"id":"ZnMax","syntax":"","description":"","keys":""},{"id":"nMin","syntax":"","description":"","keys":""},{"id":"ZnMin","syntax":"","description":"","keys":""},{"id":"DeltaTbl","syntax":"","description":"","keys":""},{"id":"Tstep","syntax":"","description":"","keys":""},{"id":"thetastep","syntax":"","description":"","keys":""},{"id":"ZTstep","syntax":"","description":"","keys":""},{"id":"Zthetastep","syntax":"","description":"","keys":""},{"id":"DeltaX","syntax":"","description":"","keys":""},{"id":"DeltaY","syntax":"","description":"","keys":""},{"id":"XFact","syntax":"","description":"","keys":""},{"id":"YFact","syntax":"","description":"","keys":""},{"id":"TblInput","syntax":"","description":"","keys":""},{"id":"|N","syntax":"ùó°","description":"Total number of payments.","keys":"(APPS) 1:Finance VARS 1:ùó°"},{"id":"I%","syntax":"I%","description":"Annual interest rate.","keys":"(APPS) 1:Finance VARS 2:I%"},{"id":"PV","syntax":"PV","description":"Present value.","keys":"(APPS) 1:Finance VARS 3:PV"},{"id":"PMT","syntax":"PMT","description":"Payment amount.","keys":"(APPS) 1:Finance VARS 4:PMT"},{"id":"FV","syntax":"FV","description":"Future value.","keys":"(APPS) 1:Finance VARS 5:FV"},{"id":"P/Y","syntax":"P/Y","description":"Number of payment periods per year.","keys":"(APPS) 1:Finance VARS 6:P/Y"},{"id":"C/Y","syntax":"C/Y","description":"Number of compounding periods per year.","keys":"(APPS) 1:Finance VARS 7:C/Y"},{"id":"w(nMin)","syntax":"","description":"","keys":""},{"id":"Zw(nMin)","syntax":"","description":"","keys":""},{"id":"PlotStep","syntax":"","description":"","keys":""},{"id":"ZPlotStep","syntax":"","description":"","keys":""},{"id":"Xres","syntax":"","description":"","keys":""},{"id":"ZXres","syntax":"","description":"","keys":""}],{"id":"Radian","syntax":"Radian","description":"Sets radian angle mode.","keys":"(MODE) Radian"},{"id":"Degree","syntax":"Degree","description":"Sets degree angle mode.","keys":"(MODE) Degree"},{"id":"Normal","syntax":"Normal","description":"Sets normal display mode.","keys":"(MODE) Normal"},{"id":"Sci","syntax":"Sci","description":"Sets scientific notation display mode.","keys":"(MODE) Sci"},{"id":"Eng","syntax":"Eng","description":"Sets engineering display mode.","keys":"(MODE) Eng"},{"id":"Float","syntax":"Float","description":"Sets floating decimal mode.","keys":"(MODE) Float"},{"id":"=","syntax":"<valueA>=<valueB>","description":"Returns 1 if <valueA> is equal to <valueB> and 0 otherwise. <valueA> and <valueB> can be real or complex numbers, expressions, lists, or matrices.","keys":"(2nd) [TEST] TEST 1:="},{"id":"<","syntax":"<valueA><<valueB>","description":"Returns 1 if <valueA> is less than <valueB> and 0 otherwise. <valueA> and <valueB> can be real or complex numbers, expressions, or lists.","keys":"(2nd) [TEST] TEST 5:<"},{"id":">","syntax":"<valueA>><valueB>","description":"Returns 1 if <valueA> is greater than <valueB> and 0 otherwise. <valueA> and <valueB> can be real or complex numbers, expressions, or lists.","keys":"(2nd) [TEST] TEST 3:>"},{"id":"<=","syntax":"<valueA>‚â§<valueB>","description":"Returns 1 if <valueA> is less than or equal to <valueB> and 0 otherwise. <valueA> and <valueB> can be real or complex numbers, expressions, or lists.","keys":"(2nd) [TEST] TEST 6:‚â§"},{"id":">=","syntax":"<valueA>‚â•<valueB>","description":"Returns 1 if <valueA> is greater than or equal to <valueB> and 0 otherwise. <valueA> and <valueB> can be real or complex numbers, expressions, or lists.","keys":"(2nd) [TEST] TEST 4:‚â•"},{"id":"!=","syntax":"<valueA>‚â†<valueB>","description":"Returns 1 if <valueA> is not equal to <valueB> and 0 otherwise. <valueA> and <valueB> can be real or complex numbers, expressions, lists, or matrices.","keys":"(2nd) [TEST] TEST 2:‚â†"},{"id":"+","syntax":"<value1>+<value2>","description":"Returns <valueA> plus <valueB>, or the concatenation of two non-empty strings <valueA> and <valueB>. <valueA> and <valueB> can be real or complex numbers, expressions, lists, matrices, or strings.","keys":"(+)"},{"id":"-","syntax":"<value1>‚Äì<value2>","description":"Returns <valueA> plus <valueB>. <valueA> and <valueB> can be real or complex numbers, expressions, lists, or matrices.","keys":"(‚Äì)"},{"id":"Ans","syntax":"Ans","description":"Returns the last answer.","keys":"(2nd) [ANS]"},{"id":"Fix ","syntax":"Fix <number>","description":"Sets fixed-decimal mode for <number> decimal places.","keys":"(MODE) 0123456789"},{"id":"Horiz","syntax":"Horiz","description":"Sets horizontal split-screen mode.","keys":"(MODE) Horiz"},{"id":"Full","syntax":"Full","description":"Sets full screen mode.","keys":"(MODE) Full"},{"id":"Func","syntax":"Func","description":"Sets function graphing mode.","keys":"(MODE) Func"},{"id":"Param","syntax":"Param","description":"Sets parametric graphing mode.","keys":"(MODE) Par"},{"id":"Polar","syntax":"Polar","description":"Sets polar graphing mode.","keys":"(MODE) Pol"},{"id":"Seq","syntax":"Seq","description":"Sets sequence graphing mode.","keys":"(MODE) Seq"},{"id":"IndpntAuto","syntax":"IndpntAuto","description":"Sets table to generate independent-variable values automatically.","keys":"(2nd) [TBLSET] Indpnt: Auto"},{"id":"IndpntAsk","syntax":"IndpntAsk","description":"Sets table to ask for independent-variable values.","keys":"(2nd) [TBLSET] Indpnt: Ask"},{"id":"DependAuto","syntax":"DependAuto","description":"Sets table to generate dependent-variable values automatically.","keys":"(2nd) [TBLSET] Depend: Auto"},{"id":"DependAsk","syntax":"DependAsk","description":"Sets table to ask for dependent-variable values.","keys":"(2nd) [TBLSET] Depend: Ask"},[{"id":"Sequential","syntax":"Sequential","description":"Sets mode to graph functions sequentially.","keys":"(MODE) Sequential"},{"id":"Simul","syntax":"Simul","description":"Sets mode to graph functions simultaneously.","keys":"(MODE) Simul"},{"id":"PolarGC","syntax":"PolarGC","description":"Sets polar graphing coordinates format.","keys":"(2nd) [FORMAT] PolarGC"},{"id":"RectGC","syntax":"RectGC","description":"Sets rectangular graphing coordinates format.","keys":"(2nd) [FORMAT] RectGC"},{"id":"CoordOn","syntax":"CoordOn","description":"Turns on cursor coordinate value display.","keys":"(2nd) [FORMAT] CoordOff"},{"id":"CoordOff","syntax":"CoordOff","description":"Turns off cursor coordinate value display.","keys":"(2nd) [FORMAT] CoordOff"},{"id":"Connected","syntax":"Connected","description":"Sets connected plotting mode; resets all Y= editor graph-style settings to ‚ï≤.","keys":"(MODE) Connected"},{"id":"Dot","syntax":"Dot","description":"Sets dot plotting mode; resets all Y= editor graph-style settings to ‚ã±.","keys":"(MODE) Dot"},{"id":"AxesOn","syntax":"AxesOn","description":"Turns on the graph axes.","keys":"(2nd) [FORMAT] AxesOn"},{"id":"AxesOff","syntax":"AxesOff","description":"Turns off the graph axes.","keys":"(2nd) [FORMAT] AxesOff"},{"id":"GridOn","syntax":"GridOn","description":"Turns on grid format.","keys":"(2nd) [FORMAT] GridOn"},{"id":"GridOff","syntax":"GridOff","description":"Turns off grid format.","keys":"(2nd) [FORMAT] GridOff"},{"id":"LabelOn","syntax":"Lbl <label>","description":"Creates a <label> of one or two characters.","keys":"(2nd) [FORMAT] LabelOn"},{"id":"LabelOff","syntax":"LabelOff","description":"Turns off axes labels.","keys":"(2nd) [FORMAT] LabelOff"},{"id":"Web","syntax":"Web","description":"Sets sequence graphs to trace as webs.","keys":"(2nd) [FORMAT] Web"},{"id":"Time","syntax":"Time","description":"Sets sequence graphs to plot with respect to time.","keys":"(2nd) [FORMAT] Time"},{"id":"uvAxes","syntax":"uvAxes","description":"Sets sequence graphs to plot u(n) on the x-axis and v(n) on the y-axis.","keys":"(2nd) [FORMAT] uv"},{"id":"vwAxes","syntax":"vwAxes","description":"Sets sequence graphs to plot v(n) on the x-axis and w(n) on the y-axis.","keys":"(2nd) [FORMAT] vw"},{"id":"uwAxes","syntax":"uwAxes","description":"Sets sequence graphs to plot u(n) on the x-axis and w(n) on the y-axis.","keys":"(2nd) [FORMAT] uw"}],{"id":"plotsquare","syntax":"<plot>(<type>,<data>,‚ñ°)","description":"Uses ‚ñ° as the mark for a plot. See the plot commands for more information.","keys":"(2nd) [STAT PLOT] MARK ‚ñ°"},{"id":"plotcross","syntax":"<plot>(<type>,<data>,Ôπ¢)","description":"Uses Ôπ¢ as the mark for a plot. See the plot commands for more information.","keys":"(2nd) [STAT PLOT] MARK Ôπ¢"},{"id":"plotdot","syntax":"<plot>(<type>,<data>,¬∑)","description":"Uses ¬∑ as the mark for a plot. See the plot commands for more information.","keys":"(2nd) [STAT PLOT] MARK ¬∑"},{"id":"*","syntax":"<valueA>*<valueB>","description":"Returns <valueA> times <valueB>. <valueA> and <valueB> can be real or complex numbers, expressions, lists, or matrices.","keys":"(*)"},{"id":"/","syntax":"<valueA>/<valueB>","description":"Returns <valueA> divided by <valueB>. <valueA> and <valueB> can be real or complex numbers, expressions, or lists.","keys":"(√∑)"},{"id":"Trace","syntax":"Trace","description":"Displays the graph and enters trace mode.","keys":"(TRACE)"},{"id":"ClrDraw","syntax":"ClrDraw","description":"Clears the graph screen.","keys":"(2nd) [DRAW] DRAW 1:ClrDraw"},{"id":"ZStandard","syntax":"ZStandard","description":"Replots the functions immediately, updating the window variables to the default values (Xmin and Ymin at -10, Xmax and Ymax at 10, etc.).","keys":"(ZOOM) ZOOM 6:ZStandard"},{"id":"ZTrig","syntax":"","description":"","keys":""},{"id":"ZBox","syntax":"ZBox","description":"Displays a graph, lets you draw a box that defines a new viewing window, and updates the window.","keys":"(ZOOM) ZOOM 1:ZBox"},{"id":"Zoom In","syntax":"Zoom In","description":"Magnifies the part of the graph that surrounds the cursor location.","keys":"(ZOOM) ZOOM 2:Zoom In"},{"id":"Zoom Out","syntax":"Zoom Out","description":"Displays a greater portion of the graph, centered on the cursor location.","keys":"(ZOOM) ZOOM 3:Zoom Out"},{"id":"ZSquare","syntax":"ZSquare","description":"Adjusts the X or Y window settings so that each pixel represents an equal width and height in the coordinate system, and updates the viewing window.","keys":"(ZOOM) ZOOM 5:ZSquare"},{"id":"ZInteger","syntax":"ZInteger","description":"Adjusts the viewing window so that ‚àÜX and ‚àÜY are 0.1 and Xscl and Yscl are 10.","keys":"(ZOOM) ZOOM 8:ZInteger"},{"id":"ZPrevious","syntax":"ZPrevious","description":"Replots the graph using the window variables of the graph that was displayed before you executed the last ZOOM instruction.","keys":"(ZOOM) MEMORY 1:ZPrevious"},{"id":"ZDecimal","syntax":"ZDecimal","description":"Adjusts the viewing window so that ‚àÜX and ‚àÜY are 0.1, and displays the graph screen with the origin centered on the screen.","keys":"(ZOOM) ZOOM 4:ZDecimal"},{"id":"ZoomStat","syntax":"ZoomStat","description":"Redefines the viewing window so that all statistical data points are displayed.","keys":"(ZOOM) ZOOM 9:ZoomStat"},{"id":"ZoomRcl","syntax":"ZoomRcl","description":"Graphs the selected functions in a user-defined viewing window.","keys":"(ZOOM) MEMORY 3:ZoomRcl"},{"id":"PrintScreen","syntax":"","description":"This token serves no purpose whatsoever.","keys":""},{"id":"ZoomSto","syntax":"ZoomSto","description":"Immediately stores the current viewing window.","keys":"(ZOOM) MEMORY 2:ZoomSto"},{"id":"Text(","syntax":"Text({-1}<row>,<column>,<value1>{,<value2>,...,<valueN>})","description":"Writes <values> on graph beginning at pixel (<row>,<column>), where <row> is between 0 and 57 and <column> is between 0 ¬Åand¬Å 94. If the first argument is negative one, large font is used.","keys":"(2nd) [DRAW] 0:Text("},{"id":" nPr ","syntax":"<valueA> nPr <valueB>","description":"Returns the number of permutations of <valueA> taken <valueB> at a time. <valueA> and <valueB> can be real numbers or lists.","keys":"(MATH) PRB 2:nPr"},{"id":" nCr ","syntax":"<valueA> nCr <valueB>","description":"Returns the number of combinations of <valueA> taken <valueB> at a time. <valueA> and <valueB> can be real numbers or lists.","keys":"(MATH) PRB 3:nCr"},{"id":"FnOn ","syntax":"FnOn {<functionnumber1>,...,<functionnumberN>}","description":"Selects all equations or specified equations.","keys":"(VARS) Y-VARS 4:On/Off ON/OFF 1:FnOn"},{"id":"FnOff ","syntax":"FnOff {<functionnumber1>,...,<functionnumberN>}","description":"Deselects all equations or specified equations.","keys":"(VARS) Y-VARS 4:On/Off 2:FnOff"},{"id":"StorePic ","syntax":"StorePic <data>","description":"Stores contents on the graph in picture variable Pic<number>.","keys":"(2nd) [DRAW] STO 1:StorePic"},{"id":"RecallPic ","syntax":"RecallPic <number>","description":"Displays the graph and adds the picture stored in picture variable Pic<number>.","keys":"(2nd) [DRAW] STO 2:RecallPic"},{"id":"StoreGDB ","syntax":"StoreGDB <number>","description":"Stores the current equation variables and window settings in graph database variable GDB<number>.","keys":"(2nd) [DRAW] STO 3:StoreGDB"},{"id":"RecallGDB ","syntax":"RecallGDB <number>","description":"Restores all equation variables and window settings stored in the graph database variable GDB<number>.","keys":"(2nd) [DRAW] STO 4:RecallGDB"},{"id":"Line(","syntax":"Line(<x1>,<y1>,<x2>,<y2>{,<number>})","description":"Draws a line from (<x1>,<y1>) to (<x2>,<y2>). If <number> is provided and zero, the function erases the line instead.","keys":"(2nd) [DRAW] DRAW 2:Line("},{"id":"Vertical ","syntax":"Vertical <x>","description":"Draws a vertical line at <x>.","keys":"(2nd) [DRAW] DRAW 4:Vertical"},{"id":"Pt-On(","syntax":"Pt-On(<x>,<y>{,<mark>})","description":"Draws a point at (<x>,<y>) using mark <mark>.","keys":"(2nd) [DRAW] POINTS 1:Pt-On("},{"id":"Pt-Off(","syntax":"Pt-Off(<x>,<y>{,<mark>})","description":"Erases a point at (<x>,<y>) using mark <mark>.","keys":"(2nd) [DRAW] POINTS 2:Pt-Off("},{"id":"Pt-Change(","syntax":"Pt-Change(<x>,<y>)","description":"Reverses a point at (<x>,<y>).","keys":"(2nd) [DRAW] POINTS 3:Pt-Change("},{"id":"Pxl-On(","syntax":"Pxl-On(<row>,<column>)","description":"Draws pixel at row <row> and column <column>; <row> is between 0 and 62 and <column> is between 0 and 94.","keys":"(2nd) [DRAW] POINTS 4:Pxl-On("},{"id":"Pxl-Off(","syntax":"Pxl-Off(<row>,<column>)","description":"Erases pixel at row <row> and column <column>; <row> is between 0 and 62 and <column> is between 0 and 94.","keys":"(2nd) [DRAW] POINTS 5:Pxl-Off("},{"id":"Pxl-Change(","syntax":"Pxl-Change(<row>,<column>)","description":"Reverses pixel at row <row> and column <column>; <row> is between 0 and 62 and <column> is between 0 and 94.","keys":"(2nd) [DRAW] POINTS 6:Pxl-Change("},{"id":"Shade(","syntax":"Shade(<lowerfunc>,<upperfunc>{,<xleft>,<xright>{,<pattern>{,<patres>}}})","description":"Draws <lowerfunc> and <upperfunc> in terms of X on the current graph and uses <pattern> and <patres> to shade the area bounded by <lowerfunc>, <upperfunc>, <xleft>, and <xright>.","keys":"(2nd) [DRAW] DRAW 7:Shade("},{"id":"Circle(","syntax":"Circle(<x>,<y>,<radius>{,<list>})","description":"Draws a circle with center (<x>,<y>) and radius <radius>. If <list> is provided, it should be a complex list, and will enable fast circle drawing.","keys":"(2nd) [DRAW] DRAW 9:Circle("},{"id":"Horizontal ","syntax":"Horizontal <y>","description":"Draws a horizontal line at <y>.","keys":"(2nd) [DRAW] DRAW 3:Horizontal"},{"axe:id":"Bitmap(","id":"Tangent(","syntax":"Tangent(<expression>,<value>)","description":"Draws a line tangent to function <expression> at x-value <value>.","keys":"(2nd) [DRAW] DRAW 5:Tangent("},{"id":"DrawInv ","syntax":"DrawInv <expression>","description":"Draws the inverse of <expression> by plotting x-values on the y-axis and y-values on the x-axis.","keys":"(2nd) [DRAW] DRAW 8:DrawInv"},{"axe:id":"Text ","id":"DrawF ","syntax":"DrawF <expression>","description":"Draws <expression> (in terms of X) on the graph.","keys":"(2nd) [DRAW] DRAW 6:DrawF"},[{"id":"Str1","syntax":"<String>‚ÜíStr1","description":"String number 1.","keys":"(VARS) VARS 7:Str 1:Str1"},{"id":"Str2","syntax":"<String>‚ÜíStr2","description":"String number 2.","keys":"(VARS) VARS 7:Str 2:Str2"},{"id":"Str3","syntax":"<String>‚ÜíStr3","description":"String number 3.","keys":"(VARS) VARS 7:Str 3:Str3"},{"id":"Str4","syntax":"<String>‚ÜíStr4","description":"String number 4.","keys":"(VARS) VARS 7:Str 4:Str4"},{"id":"Str5","syntax":"<String>‚ÜíStr5","description":"String number 5.","keys":"(VARS) VARS 7:Str 5:Str5"},{"id":"Str6","syntax":"<String>‚ÜíStr6","description":"String number 6.","keys":"(VARS) VARS 7:Str 6:Str6"},{"id":"Str7","syntax":"<String>‚ÜíStr7","description":"String number 7.","keys":"(VARS) VARS 7:Str 7:Str7"},{"id":"Str8","syntax":"<String>‚ÜíStr8","description":"String number 8.","keys":"(VARS) VARS 7:Str 8:Str8"},{"id":"Str9","syntax":"<String>‚ÜíStr9","description":"String number 9.","keys":"(VARS) VARS 7:Str 9:Str9"},{"id":"Str0","syntax":"<String>‚ÜíStr0","description":"String number 0.","keys":"(VARS) VARS 7:Str 0:Str0"}],{"id":"rand","syntax":"rand{(<numtrials>)}","description":"Returns a random number between 0 and 1 for a specified number of trials <numtrials>.","keys":"(MATH) PRB 1:rand"},{"id":"pi","syntax":"œÄ","description":"Return the number pi.","keys":"(2nd) [œÄ]"},{"id":"getKey","syntax":"getKey","description":"Returns the key code for the current keystroke, or 0, if no key is pressed. See http://clrhome.org/keypad/ for a list of keys and their keypress values.","keys":"(PRGM) I/O 7:getKey"},{"id":"'","syntax":"<degrees>¬∞<minutes>'{<seconds>\"}","description":"Interprets <minutes> angle measurement as minutes.","keys":"(2nd) [ANGLE] ANGLE 2:'"},{"id":"?","syntax":"","description":"Has no function whatsoever, but can be used in a string.","keys":"[alpha](-)"},{"id":"~","syntax":"‚Åª<value>","description":"Returns the negative of a real or complex number, expression, list, or matrix.","keys":"((-))"},{"axe:id":"sign{","id":"int(","syntax":"int(<value>)","description":"Returns the largest integer ¬Åless than or equal to a real or complex number, expression, list, or matrix.","keys":"(MATH) NUM 5:int("},{"id":"abs(","syntax":"abs(<value>)","description":"Returns the absolute value of a number, expression, list, or matrix.","keys":"(MATH) NUM 1:abs("},{"axe:id":"Buff(","id":"det(","syntax":"det(<matrix>)","description":"Returns determinant of <matrix>.","keys":"(2nd) [MATRX] MATH 1:det("},{"axe:id":"#Icon(","id":"identity(","syntax":"identity(<dimension>)","description":"Returns the identity matrix of <dimension> rows by <dimension> columns.","keys":"(2nd) [MATRX] MATH 5:identity"},{"id":"dim(","syntax":"[<length>‚Üí]dim(<listname)  OR  [<dimensions>‚Üí]dim(<matrixname>)","description":"Returns or assigns the dimension of <listname> or <matrixname>. For a matrix, <dimensions> should be a two-element list whose first element is the number of rows and whose second element is the number of columns.","keys":"(2nd) [LIST] OPS 3:dim("},{"id":"sum(","syntax":"sum(<list>{,<int1>,<int2>})","description":"Returns the sum of the elements of <list> (between elements <int1> and <int2>, counting from 1, if given).","keys":""},{"id":"prod(","syntax":"prod(<list>{,<start>,<end>})","description":"Returns product of <list> elements between <start> and <end>.","keys":"(2nd) [LIST] MATH 6:prod("},{"id":"not(","syntax":"not(<value>)","description":"Returns 1 if <value> is zero and 0 if not. <value> can be a real number, expression, or list.","keys":"(2nd) [TEST] LOGIC 4:not("},{"axe:id":"nib{","id":"iPart(","syntax":"iPart(<value>)","description":"Returns the integer part <value>.","keys":"(MATH) NUM 3:iPart("},{"axe:id":"float{","id":"fPart(","syntax":"fPart(<value>)","description":"Returns the fractional part or parts of a real or complex number, expression, list, or matrix.","keys":"(MATH) NUM 4:fPart("},[{"id":"npv(","syntax":"npv(<rate>,<cf0>,<cflist>{,<cffreq>})","description":"Computes the sum of the present values for cash inflows and outflows.","keys":"(APPS) 1:Finance CALC 7:npv("},{"id":"irr(","syntax":"irr(<cf0>,<cflist>{,<cffreq>})","description":"","keys":""},{"id":"bal(","syntax":"bal(<npmt>{,<roundvalue>})","description":"Computes the balance at <npmt> for an amortization schedule using stored values for PV, I%, and PMT and rounds the computation to<br /><roundvalue>.","keys":"(APPS) 1:Finance CALC 9:bal("},{"id":"Sigmaprn(","syntax":"Œ£Prn(<pmt1>,<pmt2>{,roundvalue})","description":"Computes the sum, rounded to <roundvalue>, of the principal amount between <pmt1> and <pmt2> for an amortization schedule.","keys":"(APPS) 1:Finance CALC 0:Œ£Prn("},{"id":"SigmaInt(","syntax":"Œ£Int(<pmt1>,<pmt2>{,<roundvalue>})","description":"Computes the sum, rounded to <roundvalue>, of the interest amount between <pmt1> and <pmt2> for an amortization schedule.","keys":"(APPS) 1:Finance CALC A:Œ£Int("},{"id":">Nom(","syntax":"‚ñ∂Nom(<rate>,<periods>)","description":"Computes the nominal interest rate.","keys":"(APPS) 1:Finance CALC B:‚ñ∂Nom("},{"id":">Eff(","syntax":"‚ñ∂Eff(<rate>,<periods>)","description":"Computes the effective interest rate.","keys":"(APPS) 1:Finance CALC C:‚ñ∂Eff("},{"id":"dbd(","syntax":"dbd(<dateA>,<dateB>)","description":"Calculates the number of days between <dateA> and <dateB> using the actual-day-count method.","keys":"(APPS) 1:Finance CALC D:dbd("},{"id":"lcm(","syntax":"lcm(<valueA>,<valueB>)","description":"Returns the least common multiple of <valueA> and <valueB>, which can be real numbers or lists.","keys":"(MATH) NUM 8:lcm("},{"id":"gcd(","syntax":"gcd(<valueA>,<valueB>)","description":"Returns the greatest common divisor of <valueA> and <valueB>, which can be real numbers or lists.","keys":"(MATH) NUM 9:gcd("},{"id":"randInt(","syntax":"randInt(<lower>,<upper>{,<numtrials>})","description":"Returns a random integer within a range specified by <lower> and <upper> integer bounds for a specified number of trials <numtrials>.","keys":"(MATH) PRB 5:randInt("},{"id":"randBin(","syntax":"randBin(<numtrials>,<prob>{,<numsimulations>})","description":"Returns a random real number from a specified Binomial distribution for the specified number of simulations <numsimulations>.","keys":"(MATH) PRB 7:randBin("},{"id":"sub(","syntax":"sub(<string>,<begin>,<length>) OR sub(<number>)","description":"Returns a string that is a subset of another string <string>, from <begin> (counting from 1) to <length> or <number> divided by 100.","keys":"(2nd) [CATALOG] sub("},{"id":"stdDev(","syntax":"stdDev(<list>{,<freqlist>})","description":"Returns the standard deviation of the elements in <list> with frequency <freqlist>.","keys":"(2nd) [LIST] MATH 7:stdDev("},{"id":"variance(","syntax":"variance(<list>{,<freqlist>})","description":"Returns the variance of the elements in <list> with frequency <freqlist>.","keys":"(2nd) [LIST] MATH 8:variance("},{"axe:id":"inData(","id":"inString(","syntax":"inString(<string>,<substring>{,<start>})","description":"Returns the character position in <string> of the first character of <substring> beginning at <start> (defaulting to 1), or 0, if <substring> is not found in <string>","keys":"(2nd) [CATALOG] inString("},{"id":"normalcdf(","syntax":"normalcdf(<lowerbound>,<upperbound>{,<Œº>,<œÉ>})","description":"Computes the normal distribution probability between <lowerbound> and <upperbound> for the specified mean <Œº> and standard deviation <œÉ> (defaulting to 0 and 1, respectively).","keys":"(2nd) [DISTR] DISTR 2:normalcdf("},{"id":"invNorm(","syntax":"invNorm(<area>{,<Œº>,<œÉ>})","description":"Returns the integer part of a real or complex number, expression, list, or matrix.","keys":"(MATH) NUM 3:iPart("},{"id":"tcdf(","syntax":"tcdf(<lowerbound>,<upperbound>,<df>)","description":"Computes the Student's t distribution probability between <lowerbound> and <upperbound> for the specified degrees of freedom <df>.","keys":"(2nd) [DISTR] DISTR 5:tcdf("},{"id":"chi^2cdf(","syntax":"œá¬≤cdf(<lowerbound>,<upperbound>,<df>)","description":"Computes the œá¬≤ distribution probability between <lowerbound> and <upperbound> for the specified degrees of freedom <df>.","keys":"(2nd) [DISTR] DISTR 7:œá¬≤cdf("},{"id":"Fcdf(","syntax":"Fcdf(<lowerbound>,<upperbound>,<numeratordf>,<denominatordf>)","description":"Computes the F distribution probability between <lowerbound> and <upperbound> for the specified <numeratordf> (degrees of freedom) and <denominatordf>.","keys":"(2nd) [DISTR] DISTR 9:Fcdf("},{"id":"binompdf(","syntax":"binompdf(<numtrials>,<p>{,<x>})","description":"Computes a probability at <x> for the discrete binomial distribution with the specified <numtrials> and probability <p> of success on each trial.","keys":"(2nd) [DISTR] DISTR 0:binompdf("},{"id":"binomcdf(","syntax":"binomcdf(<numtrials>,<p>{,<x>})","description":"Computes a cumulative probability at <x> for the discrete binomial distribution with the specified <numtrials> and probability <p> of success on each trial.","keys":"(2nd) [DISTR] DISTR A:binomcdf("},{"id":"poissonpdf(","syntax":"poissonpdf(<Œº>,<x>)","description":"Computes a probability at <x> for the discrete Poisson distribution with the specified mean <Œº>.","keys":"(2nd) [DISTR] DISTR B:poissonpdf("},{"id":"poissoncdf(","syntax":"poissoncdf(<Œº>,<x>)","description":"Computes a cumulative probability at <x> for the discrete Poisson distribution with specified mean <Œº>.","keys":"(2nd) [DISTR] DISTR C:poissoncdf("},{"id":"geometpdf(","syntax":"geometpdf(<p>, <x>)","description":"Computes a probability at <x>, the number of the trial on which the first success occurs, for the discrete geometric distribution with the specified probability of success <p>.","keys":"(2nd) [DISTR] DISTR D:geometpdf("},{"id":"geometcdf(","syntax":"geometcdf(<p>,<x>)","description":"Computes a cumulative probability at <x>, the number of the trial on which the first success occurs, for the discrete geometric distribution with the specified probability of success <p>.","keys":"(2nd) [DISTR] DISTR E:geometcdf("},{"id":"normalpdf(","syntax":"normalpdf(<x>{,<Œº>,<œÉ>})","description":"Computes the probability density function for the normal distribution at a specified x-value <x> for the specified mean <Œº> and standard deviation <œÉ> (defaulting to 0 and 1, respectively).","keys":"(2nd) [DISTR] DISTR 1:normalpdf("},{"id":"tpdf(","syntax":"tpdf(<x>,<df>)","description":"Computes the probability density function (pdf) for the Student's t distribution at a specified x-value <x> with specified degrees of freedom <df>.","keys":"(2nd) [DISTR] DISTR 4:tpdf("},{"id":"chi^2pdf(","syntax":"œá¬≤pdf(<x>,<df>)","description":"Computes the probability density function (pdf) for the œá¬≤ distribution at a specified <x> value for the specified degrees of freedom <df>.","keys":"(2nd) [DISTR] DISTR 6:œá¬≤pdf("},{"id":"Fpdf(","syntax":"Fcdf(<x>,<numeratordf>,<denominatordf>)","description":"Computes the probability density function (pdf) for the F distribution at a specified <x> value for the specified <numeratordf> (degrees of freedom) and <denominatordf>.","keys":"(2nd) [DISTR] DISTR 8:Fpdf("},{"id":"randNorm(","syntax":"randNorm(<Œº>,<œÉ>{,<numtrials>})","description":"Returns a random real number from a specified Normal distribution specified by mean <Œº> and standard deviation <œÉ> for a specified number of trials <numtrials>.","keys":"(MATH) PRB 6:randNorm("},{"id":"tvm_Pmt","syntax":"tvm_FV{(<n>{,<i>{,<pv>{,<fv>{,<py>{,<cy>}}}}})}","description":"Computes the amount of each payment.","keys":"(APPS) 1:Finance CALC 6:tvm_Pmt"},{"id":"tvm_I%","syntax":"tvm_FV{(<n>{,<pv>{,<pmt>{,<fv>{,<py>{,<cy>}}}}})}","description":"Computes the annual interest rate.","keys":"(APPS) 1:Finance CALC 6:tvm_I%"},{"id":"tvm_PV","syntax":"tvm_FV{(<n>{,<i>{,<pmt>{,<fv>{,<py>{,<cy>}}}}})}","description":"Computes the present value.","keys":"(APPS) 1:Finance CALC 6:tvm_PV"},{"id":"tvm_N","syntax":"tvm_FV{(<i>{,<pv>{,<pmt>{,<fv>{,<py>{,<cy>}}}}})}","description":"Computes the number of payment periods.","keys":"(APPS) 1:Finance CALC 6:tvm_N"},{"id":"tvm_FV","syntax":"tvm_FV{(<n>{,<i>{,<pv>{,<pmt>{,<py>{,<cy>}}}}})}","description":"Computes the future value.","keys":"(APPS) 1:Finance CALC 6:tvm_FV"},{"axe:id":"Copy(","id":"conj(","syntax":"conj(<value>)","description":"Returns the complex conjugate of a complex number or list of complex numbers.","keys":"(MATH) CPX 1:conj("},{"axe:id":"#Realloc(","id":"real(","syntax":"real(<value>)","description":"Returns the real part of a complex number or list of complex numbers.","keys":"(MATH) CPX 2:real("},{"id":"imag(","syntax":"imag(<value>)","description":"Returns the imaginary (nonreal) part of a complex number or list of complex numbers.","keys":"(MATH) CPX 3:imag("},{"id":"angle(","syntax":"angle(<value>)","description":"Returns the polar angle of a complex number or list of complex numbers.","keys":"(MATH) CPX 4:angle("},{"id":"cumSum(","syntax":"cumSum(<value>)","description":"Returns a list of the cumulative sums of elements in list <value>, starting from the first element, or a matrix of the cumulative sums of matrix <value> elements, from top to bottom.","keys":"(2nd) [LIST] OPS 6:cumSum("},{"axe:id":"Exch(","id":"expr(","syntax":"expr(<string>)","description":"Converts <string> to an expression and executes it.","keys":"(2nd) [CATALOG] expr("},{"id":"length(","syntax":"length(<string>)","description":"Returns the number of characters in <string>.","keys":"(2nd) [CATALOG] length("},{"axe:id":"Data(","id":"DeltaList(","syntax":"ŒîList(<list>)","description":"Returns a list containing the differences between consecutive elements in <list>.","keys":"(2nd) [LIST] OPS 7:ŒîList("},{"axe:id":"Rect(","id":"ref(","syntax":"ref(<matrix>)","description":"Returns the row-echelon form of a matrix <matrix>.","keys":"(2nd) [MATRX] MATH A:ref("},{"axe:id":"RectI(","id":"rref(","syntax":"rref(<matrix>)","description":"Returns the reduced row-echelon form of a matrix <matrix>.","keys":"(2nd) [MATRX] MATH B:rref("},{"axe:id":">Hex","id":">Rect","syntax":"<value>‚ñ∂Rect","description":"Displays <value> in rectangular format.","keys":"(MATH) CPX 6:‚ñ∂Rect"},{"id":">Polar","syntax":"<value>‚ñ∂Polar","description":"Displays complex <value> in polar format.","keys":"(MATH) CPX 7:‚ñ∂Polar"},{"id":"[e]","syntax":"","description":"","keys":""},{"axe:id":"Freq(","id":"SinReg ","syntax":"SinReg {<regequ>} OR SinReg <iterations> OR SinReg {<iterations>}<xlistname>,<ylistname>{,<period>}{,<reqequ>}","description":"Attempts <iterations> times (defaulting to 3) to fit a sinusoidal regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) using period guess <period>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC C:SinReg"},{"id":"Logistic ","syntax":"Logistic {<regequ>} OR Logistic <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a logistic regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC B:Logistic"},{"id":"LinRegTTest ","syntax":"LinRegTTest {<regequ>} OR LinRegTTest <xlistname>,<ylistname>{,<freqlist>}{,<alternative>}{,<regequ>}","description":"Performs a linear regression and a Student's t-test. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero.","keys":"(STAT) TESTS E:LinRegTTest"},{"axe:id":"rotC(","id":"ShadeNorm(","syntax":"ShadeNorm(<lowerbound>,<upperbound>{,<Œº>,<œÉ>})","description":"Draws the normal density function specified by mean <Œº> and standard deviation <œÉ> (defaulting to 0 and 1, respectively) and shades the area between <lowerbound> and <upperbound>.","keys":"(2nd) [DISTR] DRAW 1:ShadeNorm("},{"axe:id":"rotCC(","id":"Shade_t(","syntax":"Shade_t(<lowerbound>,<upperbound>,<df>)","description":"Draws the density function for the Student's t distribution specified by degrees of freedom <df>, and shades the area between <lowerbound> and <upperbound>.","keys":"(2nd) [DISTR] DRAW 2:Shade_t("},{"axe:id":"flipV(","id":"Shadechi^2(","syntax":"Shadeœá¬≤(<lowerbound>,<upperbound>,<df>)","description":"Draws the density function for the œá¬≤ distribution specified by degrees of freedom <df> and shades the area between <lowerbound> and <upperbound>.","keys":"(2nd) [DISTR] DRAW 3:Shadeœá¬≤("},{"axe:id":"flipH(","id":"ShadeF(","syntax":"ShadeF(<lowerbound>,<upperbound>,<numeratordf>,<denominatordf>)","description":"Draws the density function for the F distribution specified by <numeratordf> (degrees of freedom) and <denominatordf> and shades the area between <lowerbound> and <upperbound>.","keys":"(2nd) [DISTR] DRAW 4:ShadeF("},{"id":"Matr>list(","syntax":"Matr‚ñ∂list(<matrixname>,<listname1>{,<listname2>,...,<listnameN>}) OR Matr‚ñ∂list(<matrix>,<columnnumber>,<listname>)","description":"Fills a <listname> with elements from a specified column <columnnumber> in <matrix> or each <listname> with elements from each column in <matrix>.","keys":"(2nd) [LIST] OPS A:Matr‚ñ∂list("},{"id":"List>matr(","syntax":"List‚ñ∂matr(<listname1>{,<listname2>,...,<listnameN>},<matrixname>)","description":"Fills <matrixname> column by column with the elements from each specified <listname>.","keys":"(2nd) [LIST] OPS 0:List‚ñ∂matr("},{"id":"Z-Test(","syntax":"T-Test <m0>,<œÉ>{,<listname>{,<freqlist>}{,<alternative>{,<drawflag}}} OR T-Test <m0>,<œÉ>,<Œº>,<n>{,<alternative>{,<drawflag}}","description":"Performs a Student's t-test with frequency <freqlist>. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <drawflag> is not zero, results are drawn rather than calculated. <listname> defaults to L‚ÇÅ.","keys":"(STAT) TESTS 1:Z-Test("},{"id":"T-Test","syntax":"T-Test <m0>{,<listname>{,<freqlist>}{,<alternative>{,<drawflag}}} OR T-Test <m0>,<Œº>,<sx>,<n>{,<alternative>{,<drawflag}}","description":"Performs a Student's t-test with frequency <freqlist>. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <drawflag> is not zero, results are drawn rather than calculated. <listname> defaults to L‚ÇÅ.","keys":"(STAT) TESTS 2:T-Test"},{"id":"2-SampZTest(","syntax":"2-SampTInt <s1>,<s2>{,<listname1>,<listname2>{,<freqlist1>{,<freqlist2>}}{,<alternative>{,<drawflag>}}} OR 2.SampTInt <s1>,<s2>,<m1>,<n1>,<sx2>,<n2>{,<alternative>{,<drawflag>}}","description":"Computes a two-sample z-test. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <drawflag> is not zero, results are drawn rather than calculated. <listname1> and <listname2> default to L‚ÇÅ and L‚ÇÇ, respectively.","keys":"(STATS) TESTS 3:2-SampZTest"},{"id":"1-PropZTest(","syntax":"1-PropZTest(<p0>,<x>,<n>{,<alternative>{,<drawflag>}})","description":"Computes a one-proportion z-test. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <drawflag> is not zero, results are drawn rather than calculated.","keys":"(STAT) TESTS 5:1-PropZTest("},{"id":"2-PropZTest(","syntax":"1-PropZTest(<x1>,<n1>,<x2>,<n2>{,<alternative>{,<drawflag>}})","description":"Computes a two-proportion z-test. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <drawflag> is not zero, results are drawn rather than calculated.","keys":"(STAT) TESTS 6:2-PropZTest("},{"id":"chi^2-Test(","syntax":"œá¬≤-Test(<observedmatrix>,<expectedmatrix>{,<drawflag>})","description":"Performs a chi-square test. <drawflag>=1 draws results. <drawflag>=0 calculates results.","keys":"(STAT) TESTS C:œá¬≤-Test("},{"id":"ZInterval","syntax":"ZInterval <œÉ>{,<listname>,<freqlist>,<confidence>} OR ZInterval <œÉ>,<Œº>,<n>{,<confidence>}","description":"Computes a z confidence interval.","keys":"(STATS) TESTS 7:ZInterval"},{"id":"2-SampZInt(","syntax":"2-SampTInt <s1>,<s2>{,<listname1>,<listname2>{,<freqlist1>{,<freqlist2>}}{,<confidence>}} OR 2.SampTInt <s1>,<s2>,<m1>,<n1>,<sx2>,<n2>{,<confidence>}","description":"Computes a two-sample z confidence interval. <listname1> and <listname2> default to L‚ÇÅ and L‚ÇÇ, respectively, and <confidence> defaults to 95.","keys":"(STATS) TESTS 9:2-SampZInt"},{"id":"1-PropZInt(","syntax":"1-PropZInt(x,n{,<confidence>})","description":"Computes a one-proportion z confidence interval. <confidence> defaults to 95.","keys":"(STAT) TESTS A:1-PropZInt("},{"id":"2-PropZInt(","syntax":"2-PropZInt(<x1>,<n1>,<x2>,<n2>{,<confidence>})","description":"Computes a two-proportion z confidence interval. <confidence> defaults to 95.","keys":"(STAT) TESTS B:2-PropZInt("},{"id":"GraphStyle(","syntax":"GraphStyle(<functionnumber>,<graphstylenumber>)","description":"Sets graph style <graphstylenumber> for function <functionnumber>.","keys":"(PRGM) CTL H:GraphStyle("},{"id":"2-SampTTest ","syntax":"2-SampTInt {<listname1>,<listname2>{,<freqlist1>{,<freqlist2>}}{,<alternative>{,<pooled>{,<drawflag>}}}} OR 2.SampTInt <m1>,<sx1>,<n1>,<m2>,<sx2>,<n2>{,<alternative>{,<pooled>{,<drawflag>}}}","description":"Computes a two-sample Student's t-test. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <pooled> is not zero, variances are pooled. If <drawflag> is not zero, results are drawn rather than calculated. <listname1> and <listname2> default to L‚ÇÅ and L‚ÇÇ, respectively.","keys":"(STATS) TESTS 4:2-SampTTest"},{"id":"2-SampFTest ","syntax":"2-SampFTest {<listname1>,<listname2>{,<freqlist1>{,<freqlist2>}}{,<alternative>{,<drawflag>}}} OR 2.SampFTest <sx1>,<n1>,<sx2>,<n2>{,<alternative>{,<drawflag>}}","description":"Computes a two-sample F test. Test is left-tailed if <alternative> is negative, right-tailed if <alternative> is positive, and two-tailed if <alternative is zero. If <drawflag> is not zero, results are drawn rather than calculated. <listname1> and <listname2> default to L‚ÇÅ and L‚ÇÇ, respectively.","keys":"(STATS) TESTS D:2-SampFTest"},{"id":"TInterval ","syntax":"TInterval {<confidence>} OR TInterval <listname>{,<freqname>}{,<confidence>} OR TInterval <Œº>,<sx>,<n>{,<confidence>}","description":"Computes a t confidence interval. <listname> defaults to L‚ÇÅ and <confidence> defaults to 95.","keys":""},{"id":"2-SampTInt ","syntax":"2-SampTInt {<listname1>,<listname2>{,<freqlist1>{,<freqlist2>}}{,<confidence>{,<pooled>}}} OR 2.SampTInt <m1>,<sx1>,<n1>,<m2>,<sx2>,<n2>{,<confidence>{,<pooled>}}","description":"Computes a two-sample t confidence interval.  If <pooled> is not zero, variances are pooled. <listname1> and <listname2> default to L‚ÇÅ and L‚ÇÇ, respectively, and <confidence> defaults to 95.","keys":"(STATS) TESTS 0:2-SampTInt"},{"id":"SetUpEditor ","syntax":"SetUpEditor {<listname1>,...,<listnameN>}","description":"Removes all list names from the stat list editor, then sets it up to display one or more <listnames> in the specified order, starting in column 1, or restores list names L‚ÇÅ through L‚ÇÜ to columns 1 through 6 if no <listnames> are provided.","keys":"(STAT) EDIT 5:SetUpEditor"},{"id":"Pmt_End","syntax":"Pmt_End","description":"Specifies an annuity due, where payments occur at the end of each payment period.","keys":"(APPS) 1:Finance CALC E:Pmt_End"},{"id":"Pmt_Bgn","syntax":"Pmt_Bgn","description":"Specifies an annuity due, where payments occur at the beginning of each payment period.","keys":"(APPS) 1:Finance CALC F:Pmt_Bgn"},{"id":"Real","syntax":"Real","description":"Sets mode to display complex results only when you enter complex numbers.","keys":"(MODE) Real"},{"id":"re^thetai","syntax":"re^Œ∏ùëñ","description":"Sets the mode to polar complex number mode (re^Œ∏ùëñ).","keys":"(MODE) re^Œ∏ùëñ"},{"id":"a+bi","syntax":"a+bi","description":"Sets the mode to rectangular complex number mode (a+bi).","keys":"(2nd) [MODE] a+bi"},{"id":"ExprOn","syntax":"ExprOn","description":"Turns on the expression display during TRACE.","keys":"(2nd) [FORMAT] ExprOn"},{"id":"ExprOff","syntax":"ExprOff","description":"Turns off the expression display during TRACE.","keys":"(2nd) [FORMAT] ExprOff"},{"id":"ClrAllLists","syntax":"ClrAllLists","description":"Sets to 0 the dimension of all lists in<br />memory.","keys":"(2nd) [MEM] MEMORY 4:ClrAllLists"},{"id":"GetCalc(","syntax":"GetCalc(<variable>)","description":"Gets contents of <variable> on a linked calculator and stores it to <variable> on the receiving calculator.","keys":"(PRGM) I/O 0:GetCalc("},{"id":"DelVar ","syntax":"DelVar <variable>","description":"Deletes from memory the contents of <variable>.","keys":"(PRGM) CTL G:DelVar"},{"id":"Equ>String(","syntax":"Equ‚ñ∂String(<equationname>,<stringname>)","description":"Converts the contents of <equationname> to a string and stores it in <stringname>).","keys":"(2nd) [CATALOG] Equ‚ñ∂String("},{"id":"String>Equ(","syntax":"String‚ñ∂Equ(<stringname>,<equationname>)","description":"Converts the contents of <stringname> to an equation and stores it in <equationname>).","keys":"(2nd) [CATALOG] String‚ñ∂Equ("},{"id":"Clear Entries","syntax":"Clear Entries","description":"Clears the contents of the Last Entry storage area.","keys":"(2nd) [MEM] MEMORY 3:Clear Entries"},{"id":"Select(","syntax":"Select(<xlistname>,<ylistname>)","description":"Selects one or more specific data points from a scatter plot or xyLine plot (only), and then stores the selected data points to two new lists, <xlistname> and <ylistname>.","keys":"(2nd) [LIST] OPS 8:Select("},{"id":"ANOVA(","syntax":"ANOVA(<list1>,<list2>{,<list3>,...,<list20>})","description":"Performs a one-way analysis of variance for comparing the means of two to 20 populations.","keys":"(STAT) TESTS F:ANOVA("},{"id":"ModBoxplot","syntax":"Plot<plotnumber>(ModBoxplot,<xlistname>{,<freqlist>}{,<mark>})","description":"Defines plot 1, 2, or 3 as a box-and-whisker plot with outliers for <xlistname> and optional <freqlist> using mark <mark>.","keys":"(2nd) [STAT PLOT] TYPE 4:ModBoxplot"},{"id":"NormProbPlot","syntax":"Plot<plotnumber>(NormProbPlot,<datalistname>{,<axis>}{,<mark>})","description":"Defines plot 1, 2, or 3 as a normal probability plot for <datalistname> as <axis> (either X or Y) using mark <mark>.","keys":"(2nd) [STAT PLOT] TYPE 6:NormProbPlot"},{},{},{},{},{},{},{},{},{"id":"G-T","syntax":"G-T","description":"Sets graph-table vertical split-screen mode.","keys":"(MODE) G-T"},{"id":"ZoomFit","syntax":"ZoomFit","description":"Recalculates Ymin and Ymax to include the minimum and maximum Y values, between Xmin and Xmax, of the selected functions and replots the functions.","keys":"(ZOOM) ZOOM 0:ZoomFit"},{"id":"DiagnosticOn","syntax":"DiagnosticOn","description":"Sets diagnostics-on mode; r, r¬≤, and R¬≤ are displayed as regression model results.","keys":""},{"id":"DiagnosticOff","syntax":"DiagnosticOff","description":"Sets diagnostics-off mode; r, r¬≤, and R¬≤ are not displayed as regression model results.","keys":"(2nd) [CATALOG] DiagnosticOff"},{"id":"Archive ","syntax":"Archive <variable>","description":"Moves the specified variables from RAM to the user data archive memory. Some variables can never be archived.","keys":"(2nd) [MEM] 5:Archive"},{"id":"UnArchive ","syntax":"UnArchive <variable>","description":"Moves the specified variables from the user data archive memory to RAM. Some variables can never be unarchived.","keys":"(2nd) [MEM] 6:UnArchive"},{"id":"Asm(","syntax":"Asm(prgm<name>)","description":"Executes an assembly language program.","keys":"(2nd) [CATALOG] Asm("},{"axe:id":"#Axiom(","id":"AsmComp(","syntax":"AsmComp(prgm<nameA>,prgm<nameB>)","description":"Compiles an assembly language program written in ASCII and stores the hex version.","keys":"(2nd) [CATALOG] AsmComp("},{"id":"AsmPrgm","syntax":"AsmPrgm","description":"Must be used as the first line of an assembly language program.","keys":"(2nd) [CATALOG] AsmPrgm"},{},{"id":"√Å","syntax":"","description":"","keys":""},{"id":"√Ä","syntax":"","description":"","keys":""},{"id":"√Ç","syntax":"","description":"","keys":""},{"id":"√Ñ","syntax":"","description":"","keys":""},{"id":"√°","syntax":"","description":"","keys":""},{"id":"√†","syntax":"","description":"","keys":""},{"id":"√¢","syntax":"","description":"","keys":""},{"id":"√§","syntax":"","description":"","keys":""},{"id":"√â","syntax":"","description":"","keys":""},{"id":"√à","syntax":"","description":"","keys":""},{"id":"√ä","syntax":"","description":"","keys":""},{"id":"√ã","syntax":"","description":"","keys":""},{"id":"√©","syntax":"","description":"","keys":""},{"id":"√®","syntax":"","description":"","keys":""},{"id":"√™","syntax":"","description":"","keys":""},{"id":"√´","syntax":"","description":"","keys":""},{},{"id":"√å","syntax":"","description":"","keys":""},{"id":"√é","syntax":"","description":"","keys":""},{"id":"√è","syntax":"","description":"","keys":""},{"id":"√≠","syntax":"","description":"","keys":""},{"id":"√¨","syntax":"","description":"","keys":""},{"id":"√Æ","syntax":"","description":"","keys":""},{"id":"√Ø","syntax":"","description":"","keys":""},{"id":"√ì","syntax":"","description":"","keys":""},{"id":"√í","syntax":"","description":"","keys":""},{"id":"√î","syntax":"","description":"","keys":""},{"id":"√ñ","syntax":"","description":"","keys":""},{"id":"√≥","syntax":"","description":"","keys":""},{"id":"√≤","syntax":"","description":"","keys":""},{"id":"√¥","syntax":"","description":"","keys":""},{"id":"√∂","syntax":"","description":"","keys":""},{"id":"√ö","syntax":"","description":"","keys":""},{"id":"√ô","syntax":"","description":"","keys":""},{"id":"√õ","syntax":"","description":"","keys":""},{"id":"√ú","syntax":"","description":"","keys":""},{"id":"√∫","syntax":"","description":"","keys":""},{"id":"√π","syntax":"","description":"","keys":""},{"id":"√ª","syntax":"","description":"","keys":""},{"id":"√º","syntax":"","description":"","keys":""},{"id":"√á","syntax":"","description":"","keys":""},{"id":"√ß","syntax":"","description":"","keys":""},{"id":"√ë","syntax":"","description":"","keys":""},{"id":"√±","syntax":"","description":"","keys":""},{},{},{"id":"^^:","syntax":"","description":"","keys":""},{"id":"|?","syntax":"","description":"","keys":""},{"id":"|!","syntax":"","description":"","keys":""},{"id":"alpha","syntax":"","description":"","keys":""},{"id":"beta","syntax":"","description":"","keys":""},{"id":"gamma","syntax":"","description":"","keys":""},{"id":"Delta","syntax":"","description":"","keys":""},{"id":"delta","syntax":"","description":"","keys":""},{"id":"epsilon","syntax":"","description":"","keys":""},{"id":"lambda","syntax":"","description":"","keys":""},{"id":"mu","syntax":"","description":"","keys":""},{"id":"pi","syntax":"","description":"","keys":""},{"id":"rho","syntax":"","description":"","keys":""},{"id":"Sigma","syntax":"","description":"","keys":""},{},{"id":"phi","syntax":"","description":"","keys":""},{"id":"Omega","syntax":"","description":"","keys":""},{"id":"phat","syntax":"","description":"","keys":""},{"id":"chi","syntax":"","description":"","keys":""},{"id":"|F","syntax":"","description":"","keys":""},{"id":"a","syntax":"","description":"","keys":""},{"id":"b","syntax":"","description":"","keys":""},{"id":"c","syntax":"","description":"","keys":""},{"id":"d","syntax":"","description":"","keys":""},{"id":"e","syntax":"","description":"","keys":""},{"id":"f","syntax":"","description":"","keys":""},{"id":"g","syntax":"","description":"","keys":""},{"id":"h","syntax":"","description":"","keys":""},{"id":"i","syntax":"","description":"","keys":""},{"id":"j","syntax":"","description":"","keys":""},{"id":"k","syntax":"","description":"","keys":""},{},{"id":"l","syntax":"","description":"","keys":""},{"id":"m","syntax":"","description":"","keys":""},{"id":"n","syntax":"","description":"","keys":""},{"id":"o","syntax":"","description":"","keys":""},{"id":"p","syntax":"","description":"","keys":""},{"id":"q","syntax":"","description":"","keys":""},{"id":"r","syntax":"","description":"","keys":""},{"id":"s","syntax":"","description":"","keys":""},{"id":"t","syntax":"","description":"","keys":""},{"id":"u","syntax":"","description":"","keys":""},{"id":"v","syntax":"","description":"","keys":""},{"id":"w","syntax":"","description":"","keys":""},{"id":"x","syntax":"","description":"","keys":""},{"id":"y","syntax":"","description":"","keys":""},{"id":"z","syntax":"","description":"","keys":""},{"id":"sigma","syntax":"","description":"","keys":""},{"id":"smallT","syntax":"","description":"","keys":""},{"id":"√ç","syntax":"","description":"","keys":""},{"id":"GarbageCollect","syntax":"GarbageCollect","description":"Displays the garbage collection menu to allow cleanup of unused archive memory.","keys":"(2nd) [CATALOG] GarbageCollect"},{"id":"|~","syntax":"","description":"","keys":""},{},{"id":"@","syntax":"","description":"","keys":""},{"id":"#","syntax":"","description":"","keys":""},{"id":"$","syntax":"","description":"","keys":""},{"id":"&","syntax":"","description":"","keys":""},{},{"id":";","syntax":"","description":"","keys":""},{"id":"\\","syntax":"","description":"","keys":""},{"id":"|","syntax":"","description":"","keys":""},{"id":"_","syntax":"","description":"","keys":""},{"id":"%","syntax":"","description":"","keys":""},{"id":"...","syntax":"","description":"","keys":""},{"id":"|<","syntax":"","description":"","keys":""},{"id":"sharps","syntax":"","description":"","keys":""},{"id":"^^x","syntax":"","description":"","keys":""},{"id":"smallT","syntax":"","description":"","keys":""},{"id":"small0","syntax":"","description":"","keys":""},{"id":"small1","syntax":"","description":"","keys":""},{"id":"small2","syntax":"","description":"","keys":""},{"id":"small3","syntax":"","description":"","keys":""},{"id":"small4","syntax":"","description":"","keys":""},{"id":"small5","syntax":"","description":"","keys":""},{"id":"small6","syntax":"","description":"","keys":""},{"id":"small7","syntax":"","description":"","keys":""},{"id":"small8","syntax":"","description":"","keys":""},{"id":"small9","syntax":"","description":"","keys":""},{"id":"small10","syntax":"","description":"","keys":""},{"id":"<|","syntax":"","description":"","keys":""},{"id":"|>","syntax":"","description":"","keys":""},{"id":"uparrow","syntax":"","description":"","keys":""},{"id":"downarrow","syntax":"","description":"","keys":""},{},{"id":"xmark","syntax":"","description":"","keys":""},{"id":"integral","syntax":"","description":"","keys":""},{"id":"bolduparrow","syntax":"","description":"","keys":""},{"id":"bolddownarrow","syntax":"","description":"","keys":""},{"id":"squareroot","syntax":"","description":"","keys":""},{"id":"invertedequal","syntax":"","description":"","keys":""}],{"id":"sqrt(","syntax":"‚àö(<value>)","description":"Returns square root of a real or complex number, expression, or list.","keys":"(2nd) [‚àö(]"},{"id":"cuberoot(","syntax":"¬≥‚àö(<value>)","description":"Returns the cube root of a real or complex number, expression, or list.","keys":"(MATH) MATH 4: ¬≥‚àö("},{"id":"ln(","syntax":"ln(<value>)","description":"Returns the natural logarithm of a real or complex number, expression, or list.","keys":"(LN)"},{"id":"e^(","syntax":"e^(<value>)","description":"Returns e raised to power <value> or a list of e raised to a list <value> of powers.","keys":"(2nd) [eÀ£]"},{"axe:id":"lambda(","id":"log(","syntax":"log(<value>)","description":"Returns logarithm of a real or complex number, expression, or list.","keys":"(LOG)"},{"id":"10^","syntax":"‚ÇÅ‚ÇÄ^(<value>)","description":"Returns 10 raised to the <value> power. <value> can be a real or complex number expression, or list.","keys":"(2nd) [10À£]"},{"id":"sin(","syntax":"sin(<value>)","description":"Returns the sine of a real number, expression, or list.","keys":"(SIN)"},{"id":"sin^-1(","syntax":"sin‚Åª¬π(<value>)","description":"Returns the arcsine of a real number, expression, or list.","keys":"(2nd) [SIN‚Åª¬π]"},{"id":"cos(","syntax":"cos(<value>)","description":"Returns cosine of a real number, expression, or list.","keys":"(COS)"},{"id":"cos^-1(","syntax":"cos‚Åª¬π(<value>)","description":"Returns arccosine of a real number, expression, or list.","keys":"(2nd) [COS‚Åª¬π]"},{"id":"tan(","syntax":"tan(<value>)","description":"Returns the tangent of a real number, expression, or list.","keys":"(TAN)"},{"id":"tan^-1(","syntax":"tan‚Åª¬π(<value>)","description":"Returns the arctangent of a real number, expression, or list.","keys":"(2nd) [TAN‚Åª¬π]"},{"id":"sinh(","syntax":"sinh(<value>)","description":"Returns the hyperbolic sine of a real number, expression, or list.","keys":"(2nd) [CATALOG] sinh("},{"id":"sinh^-1(","syntax":"sinh‚Åª¬π(<value>)","description":"Returns the hyperbolic arcsine of a real number, expression, or list.","keys":"(2nd) [CATALOG] sinh‚Åª¬π("},{"id":"cosh(","syntax":"cosh(<value>)","description":"Returns hyperbolic cosine of a real number, expression, or list.","keys":"(2nd) [CATALOG] cosh("},{"id":"cosh^-1(","syntax":"cosh‚Åª¬π(<value>)","description":"Returns hyperbolic arccosine of a real number, expression, or list.","keys":"(2nd) [CATALOG] cosh‚Åª¬π("},{"id":"tanh(","syntax":"tanh(<value>)","description":"Returns hyperbolic tangent of a real number, expression, or list.","keys":"(2nd) [CATALOG] tanh("},{"id":"tanh^-1(","syntax":"tan‚Åª¬π(<value>)","description":"Returns the hyperbolic arctangent of a real number, expression, or list.","keys":"(2nd) [CATALOG] tan‚Åª¬π("},{"id":"If ","syntax":"If <condition>:<command> OR If <condition>:Then:<commandsA>{:Else:<commandsB>}:End","description":"Executes <command> or <commandsA> if <condition> is met and <commandsB> if <condition> is not met.","keys":"(PRGM) CTL 1:If"},{"id":"Then","syntax":"If <condition>:Then:<commandsA>{:Else:<commandsB>}:End","description":"Executes <commandsA> if <condition> is met and <commandsB> if <condition> is not met.","keys":"(PRGM) CTL 2:Then"},{"id":"Else","syntax":"If <condition>:Then:<commandsA>:Else:<commandsB>:End","description":"Executes <commandsA> if <condition> is met and <commandsB> if <condition> is not met.","keys":"(PRGM) CTL 3:Else"},{"id":"While ","syntax":"While <condition>:<commands>:End","description":"Executes <commands> while <condition> is true. <condition> is checked at the beginning.","keys":"(PRGM) CTL 5:While"},{"id":"Repeat ","syntax":"Repeat <condition>:<commands>:End","description":"Executes <commands> until <condition> is true. <condition> is checked at the end; that is, <commands> will be executed at least once.","keys":"(PRGM) CTL 6:Repeat"},{"id":"For(","syntax":"For(<variable>,<begin>,<end>{,<increment>}):<commands>:End","description":"Executes <commands>, incrementing <variable> from <begin> by <increment> (defaulting to 1) until <variable> is greater than <end>.","keys":"(PRGM) CTL 4:For("},{"id":"End","syntax":"End","description":"Identifies end of For(, If-Then-Else, Repeat, or While loop.","keys":"(PRGM) CTL 7:End"},{"id":"Return","syntax":"Return","description":"Returns to the calling program or to the home screen if none.","keys":"(PRGM) CTL E:Return"},{"id":"Lbl ","syntax":"Lbl <label>","description":"Creates a <label> of one or two characters.","keys":"(PRGM) CTL 9:Lbl"},{"id":"Goto ","syntax":"Goto <label>","description":"Transfers control to <label>.","keys":"(PRGM) CTL 0:Goto"},{"id":"Pause ","syntax":"Pause {<value>}","description":"Displays <value> if provided; suspends program execution until you press (ENTER).","keys":"(PRGM) CTL 8:Pause"},{"id":"Stop","syntax":"Stop","description":"Ends program execution; returns to home screen.","keys":"(PRGM) CTL F:Stop"},{"id":"IS>(","syntax":"IS>(<variable>,<value>):<line>","description":"Increments <variable> by one, and skips the next line if the result is greater than <value>.","keys":"(PRGM) CTL A:IS>("},{"id":"DS<(","syntax":"DS<(<variable>,<value>):<command>","description":"Decrements <variable> by 1; skips the next line if <variable> is less than <value>.","keys":"(PRGM) CTL B:DS<("},{"axe:id":"input","id":"Input ","syntax":"Input {{<string>}<variable>}","description":"When given no arguments, displays the graph screen is displayed and waits for the user to select a point with the cursor, storing coordinates in X and Y; when arguments are given, prompts for value to store to <variable>, displaying <text> if it is given and \"?\" otherwise.","keys":"(PRGM) I/O 1:Input"},{"id":"Prompt ","syntax":"Prompt <variable1>{,<variable2>,...,<variableN>}","description":"Prompts for value for <variable1>, then <variable2>, and so on.","keys":"(PRGM) I/O 2:Prompt"},{"id":"Disp ","syntax":"Disp [<value1>[,...[,<valueN>]]]","description":"Displays the home screen and each value provided.","keys":"(PRGM) I/O 3:Disp"},{"id":"DispGraph","syntax":"DispGraph","description":"Displays the graph.","keys":"(PRGM) I/O 4:DispGraph"},{"id":"Output(","syntax":"Output(<row>,<column>,<value>)","description":"Displays <value> beginning at specified <row> and <column>.","keys":"(PRGM) I/O 6:Output("},{"id":"ClrHome","syntax":"ClrHome","description":"Clears the home screen.","keys":"(PRGM) I/O 8:ClrHome"},{"id":"Fill(","syntax":"Fill(<number>,<name>)","description":"Stores <value> to each element in matrix or list <name>.","keys":"(2nd) [MATRX] MATH 4:Fill("},{"id":"SortA(","syntax":"SortA(<keylistname>{,<dependlist1>...<dependlistN>})","description":"Sorts elements of <keylistname> in ascending order, then sorts each <dependlist> as a dependent list using elements in <keylistname> as keys.","keys":"(2nd) [LIST] OPS 1:SortA("},{"id":"SortD(","syntax":"SortD(<keylistname>{,<dependlist1>...<dependlistN>})","description":"Sorts elements of <keylistname> in descending order, then sorts each <dependlist> as a dependent list using elements in <keylistname> as keys.","keys":"(2nd) [LIST] OPS 2:SortD("},{"id":"DispTable","syntax":"DispTable","description":"Displays the table.","keys":"(PRGM) I/O 5:DispTable"},{"id":"Menu(","syntax":"Menu(<title>,<text1>,<label1>{,<text2>,<label2>,...,<text7>,<label7>})","description":"Generates a menu of up to seven items during program execution.","keys":"(PRGM) CTL C:Menu("},{"id":"Send(","syntax":"Send(<variable>)","description":"Sends contents of <variable> to the CBL 2/CBL or CBR System.","keys":"(PRGM) I/O B:Send("},{"axe:id":"Get","id":"Get(","syntax":"Get(<variable>)","description":"Gets data from the CBL 2/CBL or CBR and stores it in <variable>.","keys":"(PRGM) I/O A:Get("},{"id":"PlotsOn ","syntax":"PlotsOn {<functionnumber1>,...,<functionnumberN>}","description":"Selects all stat plots or one or more specified stat plots (1, 2, or 3).","keys":""},{"id":"PlotsOff ","syntax":"PlotsOff {<data>}","description":"Turns off all plots or specifically the ones listed in <data> (which should be a sequence of numbers between 0 and 3, separated by commas).","keys":""},{"id":"|L","syntax":" ü<name>","description":"Returns the list named <name>.","keys":"(2nd) [LIST] OPS B: ü"},{"axe:id":"Pt-Mask(","id":"Plot1(","syntax":"Plot1(<type>,<data>)","description":"Defines a plot in Plot1. See Scatter, xyLine, Histogram, ModBoxPlot, BoxPlot, or NormProbPlot for information on the arguments in <data>.","keys":"(2nd) [STAT PLOT] PLOTS 1:Plot1("},{"axe:id":"pt-Get(","id":"Plot2(","syntax":"Plot2(<type>,<data>)","description":"Defines a plot in Plot2. See Scatter, xyLine, Histogram, ModBoxPlot, BoxPlot, or NormProbPlot for information on the arguments in <data>.","keys":"(2nd) [STAT PLOT] PLOTS 2:Plot2("},{"id":"Plot3(","syntax":"Plot3(<type>,<data>)","description":"Defines a plot in Plot3. See Scatter, xyLine, Histogram, ModBoxPlot, BoxPlot, or NormProbPlot for information on the arguments in <data>.","keys":"(2nd) [STAT PLOT] PLOTS 3:Plot3("},[],{"id":"^","syntax":"<value>^<power>","description":"Returns <value> raised to <power>, or elements in list or matrix <value> raised to <power>. <value> can be a real or complex number, expression, list, or matrix.","keys":"(^)"},{"id":"xroot","syntax":"<valueA>À£‚àö<valueB>","description":"Returns root <valueA> of <valueB>. <valueA> and <valueB> can be real numbers or lists.","keys":"(MATH) MATH 5:À£‚àö"},{"id":"1-Var Stats ","syntax":"1-Var Stats {<xlistname>{,<freqlist>}}","description":"Performs one-variable analysis on the data in <xlistname> with frequency <freqlist>.","keys":"(STAT) CALC 1:1-Var Stats"},{"id":"2-Var Stats ","syntax":"2-Var Stats {<xlistname>,<ylistname>{,<freqlist>}}","description":"Performs two-variable analysis on the data in <xlistname> and <ylistname> with frequency <freqlist>.","keys":"(STAT) CALC 2:2-Var Stats"},{"id":"LinReg(a+bx) ","syntax":"LinReg(a+bx) {<regequ>} OR LinReg(a+bx) <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a linear regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 8:LinReg(a+bx)"},{"id":"ExpReg ","syntax":"ExpReg [<regequ>] OR ExpReg [<xlistname>[,<ylistname>[,<freqlist>[,<regequ>]]]]","description":"Fits an exponential regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 0:ExpReg"},{"id":"LnReg ","syntax":"LnReg {<regequ>} OR LnReg <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a logarithmic regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 9:LnReg"},{"id":"PwrReg ","syntax":"PwrReg {<regequ>} OR PwrReg <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a power regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC A:PwrReg"},{"id":"Med-Med ","syntax":"Med-Med {<regequ>} OR Med-Med <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a median-median model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 3:Med-Med"},{"id":"QuadReg ","syntax":"QuadReg {<regequ>} OR QuadReg <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a quadratic regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 5:QuadReg"},{"id":"ClrList ","syntax":"ClrList <listname1>[,<listname2>[,...[,<listnameN>]]]","description":"Sets to 0 the dimension of one or more <listnames>.","keys":"(STAT) EDIT 4:ClrList"},{"axe:id":"port","id":"ClrTable","syntax":"ClrTable","description":"Clears all values from the table.","keys":"(PRGM) I/O 9:ClrTable"},{"id":"Histogram","syntax":"Plot<plotnumber>(Histogram,<xlistname>{,<freqlist>})","description":"Defines plot 1, 2, or 3 as a histogram for <xlistname> and optional <freqlist>.","keys":"(2nd) [STAT PLOT] TYPE 3:Histogram"},{"id":"xyLine","syntax":"Plot<plotnumber>(xyLine,<xlistname>,<ylistname>{,<mark>})","description":"Defines plot 1, 2, or 3 as a connected scatter plot for <xlistname> and <ylistname> using mark <mark>.","keys":"(2nd) [STAT PLOT] TYPE 2:xyLine"},{"id":"Scatter","syntax":"Plot<plotnumber>(Scatter,<xlistname>,<ylistname>{,<mark>})","description":"Defines plot 1, 2, or 3 as a scatter plot for <xlistname> and <ylistname> using mark <mark>.","keys":"(2nd) [STAT PLOT] TYPE 1:Scatter"},{"id":"LinReg(ax+b) ","syntax":"LinReg(ax+b) {<regequ>} OR LinReg(ax+b) <xlistname>,<ylistname>{,<freqlist>}{,<regequ>}","description":"Fits a linear regression model to <xlistname> and <ylistname> (defaulting to L‚ÇÅ and L‚ÇÇ, respectively) with frequency <freqlist>, and stores the regression equation to <regequ>.","keys":"(STAT) CALC 4:LinReg(ax+b)"}]